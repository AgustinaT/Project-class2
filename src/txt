{/*
1)import { useState } from "react";
2)const [idDetail, setIdDetail] = useState(0);
3)console.log(idDetail);
4){<ItemDetailContainer id={idDetail} />}
5)setIdDetail
6)const handleDetail = (id) => {setIdDetail(id)};
7)onClick={()=> handleDetail(id)}
8)setIdDetail
9)setIdDetail={setIdDetail}
10)setIdDetail
11)setIdDetail={setIdDetail}
12)setIdDetail={setIdDetail}
<ItemDetailContainer id={2}/>
`/products.json.${params.productId}`


const [productDetail, setProductDetail] = useState(null) //puede ser un array o objeto dependiendo de la API, pero los detalles suelen ser objetos
  const [error, setError] = useState("")
  console.log(error)

  const params = useParams()
  console.log(params)

  useEffect(() => {
    setTimeout(() => { 
      const getProducts = async () => {
        try {
          const response = await fetch(`/products.json`) 
          const data = await response.json();
          console.log(data)
          const result = data.find(product => product.id == params.productId); //simple
          setProductDetail(result)
        } 
        catch (e) {
          console.log(e.message)
          setError(e.message)
        }
      }
      getProducts();
     }, 2000); 

    
    

    
    
  }, [params])
  




//manga contain er

useEffect(() => {
    setTimeout(() => {
      const getProducts = async () => {
        try {
          const response = await fetch(`/products.json`) 
          const data = await response.json();
          console.log(data)
          setManga(data)
        }
          catch (e) {
            console.log(e.message)
            setError(e.message)
          }
        } 
      getProducts();
     }, 0); 

  }, [])
  let ayuda = "manga"
  useEffect(() => { 
    const productosManga = manga.filter(product => product.categoria === ayuda ); //simple
   setManga(productosManga)
   console.log(manga)
  }, [ayuda])
  

  return ( <h1>hola</h1>
     /*<div>
    {productDetail?<ItemDetail product={productDetail}/>:<p>Cargando mangas, no te vayas!...</p>}
    </div>*/

  }



{/* setTimeout(() => {
      const getProducts = async () => {
        try {
          const response = await fetch(`/products.json`) 
          const data = await response.json();
          console.log(data)
          setManga(data)
        }
          catch (e) {
            console.log(e.message)
            setError(e.message)
          }
        } 
      getProducts();
     }, 0); 

  }, [])
  let ayuda = "manga"
  useEffect(() => { 
    const productosManga = manga.filter(product => product.categoria === ayuda ); //simple
   setManga(productosManga)
   console.log(manga)
  }, [ayuda])




movie container
import React from 'react'
import ItemDetail from '../ItemDetail/ItemDetail'
import { useState, useEffect } from "react";
import {useParams} from 'react-router-dom';


const MovieContainer = () => {
  /* const [productDetail, setProductDetail] = useState(null) //puede ser un array o objeto dependiendo de la API, pero los detalles suelen ser objetos
  const [error, setError] = useState("")
  console.log(error)

  const params = useParams()
  console.log(params)

  useEffect(() => {
    setTimeout(() => { 
      const getProducts = async () => {
        try {
          const response = await fetch(`/products.json`) 
          const data = await response.json();
          console.log(data)
          const result = data.find(product => product.id == params.productId); //simple
          setProductDetail(result)
        } 
        catch (e) {
          console.log(e.message)
          setError(e.message)
        }
      }
      getProducts();
     }, 2000); 

    
    

    
    
  }, [params])
   

  return ( <h1>anda?</h1>
    <div>
    {productDetail?<ItemDetail product={productDetail}/>:<p>Cargando mangas, no te vayas!...</p>}
    </div>
  )
}

export default MovieContainer

*/}
